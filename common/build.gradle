architectury {
    common rootProject.enabled_platforms.split(',')
}

def generatedResources = file("src/generated")

sourceSets {
    main {
        resources.srcDir generatedResources
    }
}

dependencies {
    // We depend on Fabric Loader here to use the Fabric @Environment annotations,
    // which get remapped to the correct annotations on each platform.
    // Do NOT use other classes from Fabric Loader.
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Architectury API. This is optional, and you can comment it out if you don't need it.
//    modImplementation "dev.architectury:architectury:$rootProject.architectury_api_version"
    modCompileOnly "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    modCompileOnly("vectorwing:FarmersDelight:${fdrf_version}") {
        exclude(group: "net.fabricmc")
        exclude(group: "com.github.Chocohead")

        // exclude(group: "io.github.fabricators-of-create")
        // If you want to exclude Porting Lib to instead provide your own version of Porting Lib, uncomment the above line..
    }
    modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
}
